/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentUpdateManyWithoutIssuesInput } from "./CommentUpdateManyWithoutIssuesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsInt,
  Min,
  Max,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumIssuePriority } from "./EnumIssuePriority";
import { ProjectWhereUniqueInput } from "../../project/base/ProjectWhereUniqueInput";
import { EnumIssueStatus } from "./EnumIssueStatus";
import { EnumIssueTypeField } from "./EnumIssueTypeField";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class IssueUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutIssuesInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutIssuesInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutIssuesInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutIssuesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  estimate?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumIssuePriority,
  })
  @IsEnum(EnumIssuePriority)
  @IsOptional()
  @Field(() => EnumIssuePriority, {
    nullable: true,
  })
  priority?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ProjectWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProjectWhereUniqueInput)
  @IsOptional()
  @Field(() => ProjectWhereUniqueInput, {
    nullable: true,
  })
  project?: ProjectWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumIssueStatus,
  })
  @IsEnum(EnumIssueStatus)
  @IsOptional()
  @Field(() => EnumIssueStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumIssueTypeField,
  })
  @IsEnum(EnumIssueTypeField)
  @IsOptional()
  @Field(() => EnumIssueTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { IssueUpdateInput as IssueUpdateInput };
